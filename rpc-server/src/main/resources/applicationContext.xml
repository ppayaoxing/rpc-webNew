<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
	xmlns:rpcCommon="http://rpc.com/schema/rpcCommon"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://rpc.com/schema/rpcCommon
    					http://rpc.com/schema/rpcCommon/rpcCommon.xsd">  
     <!-- 自动扫描 -->  
    <context:component-scan base-package="com.xw" />
    
    <rpcCommon:register ip="127.0.0.1" port="8080" webApp="rpc-admin" />
    
    <!-- 配置文件 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/config.properties</value>
			</list>
		</property>
	</bean>
    
 	<!-- c3p0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" lazy-init="false">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.databaseurl}" />
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="maxIdleTime" value="30" />
	</bean>
	
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:mappers/*.xml"></property>  
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.xw.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    
    <!-- <bean id="rpcDataServiceImpl" class="com.xw.server.impl.RpcDataServiceImpl"></bean>
    <bean name="/rpcDataService" class="org.springframework.remoting.caucho.HessianServiceExporter">
        <property name="service" ref="rpcDataServiceImpl" />
        <property name="serviceInterface" value="com.xw.server.RpcDataService" />
    </bean>  
    
    <bean id="taskDataServiceImpl" class="com.xw.server.impl.TaskDataServiceImpl"></bean>
    <bean name="/taskDataService" class="org.springframework.remoting.caucho.HessianServiceExporter">
        <property name="service" ref="taskDataServiceImpl" />
        <property name="serviceInterface" value="com.xw.server.TaskDataService" />
     </bean>   -->
     
     
    <bean id="userDowngradeProcessorImpl" class="test.rpc.UserDowngradeProcessorImpl"/>
    <bean id="userServiceImpl" class="test.rpc.impl.UserServiceImpl"/>
	<rpcCommon:rpcCommonServer interfaceClass="test.rpc.UserService" ref="userServiceImpl" 
			downgrade="true" downgradeProcessor="userDowngradeProcessorImpl" protocol="hessian"/>
     
     <bean id="taskDataServiceImpl" class="com.xw.server.impl.TaskDataServiceImpl"/>
     <rpcCommon:rpcCommonServer interfaceClass="com.xw.server.TaskDataService" ref="taskDataServiceImpl" />
     
     <bean class="com.rpc.spring.InterceptorInitializing"/>
     <!-- <bean id="authIpInterceptorRule" class="com.xw.rule.AuthIpInterceptorRule" /> -->
     
   <!--   <bean id="rpcDataServiceImpl" class="com.xw.server.impl.RpcDataServiceImpl"/>
     <rpcCommon:rpcCommonServer interfaceClass="com.xw.server.RpcDataService" ref="rpcDataServiceImpl" /> -->

</beans>  